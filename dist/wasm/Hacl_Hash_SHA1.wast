(module
  (type $0 (func))
  (type $1 (func (param i32) (result i32)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i32) (result i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i64) (result i64)))
  (type $6 (func (param i32 i32 i32) (result i32)))
  (type $7 (func (param i32 i32 i32 i32) (result i32)))
  (type $8 (func (param i32 i32 i32 i32) (result i32)))
  (type $9 (func (param i64 i64 i64 i32) (result i64)))
  (type $10 (func (param i64 i64 i64 i32) (result i64)))
  (type $11 (func (param i32) (result i32)))
  (type $12 (func (param i32) (result i32)))
  (type $13 (func (param i32) (result i32)))
  (type $14 (func (param i32) (result i32)))
  (type $15 (func (param i32) (result i32)))
  (type $16 (func (param i32) (result i32)))
  (type $17 (func (param i32) (result i32)))
  (type $18 (func (param i32 i64 i32 i32) (result i64)))
  (type $19 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $20 (func (param i32 i64 i64 i32 i32) (result i64)))
  (type $21 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $22 (func (param i32 i32 i32) (result i32)))
  (type $23 (func (param i32 i32 i32) (result i32)))
  (type $24 (func (param i32 i32 i32) (result i32)))
  (type $25 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $26 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $27 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $28 (func (param i32 i32 i32) (result i32)))
  (type $29 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $30 (func (param i32 i32 i32) (result i32)))
  (type $31 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $32 (func (param i32 i32 i32 i64 i32 i32) (result i32)))
  (type $33 (func (param i32 i32 i32 i64 i32 i32) (result i32)))
  (type $34 (func (param i32 i32 i32) (result i32)))
  (type $35 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $36 (func (param i32 i32 i32) (result i32)))
  (type $37 (func (param i32 i64 i32 i32) (result i32)))
  (type $38 (func (param i32 i32 i32) (result i32)))
  (type $39 (func (param i32) (result i32)))
  (type $40 (func (param i32 i32 i32) (result i32)))
  (type $41 (func (param i32 i64 i32 i32) (result i32)))
  (type $42 (func (param i32 i32 i32) (result i32)))
  (type $43 (func (param i32) (result i32)))
  (type $44 (func))
  (import "Kremlin" "mem" (memory $0 16))
  (import "Kremlin" "data_start" (global $0 i32))
  (import "Kremlin" "debug" (func $0 (type 0)))
  (import "WasmSupport" "WasmSupport_trap" (func $1 (type 1)))
  (import "WasmSupport" "WasmSupport_align_64" (func $2 (type 2)))
  (import "WasmSupport" "WasmSupport_check_buffer_size" (func $3 (type 3)))
  (import "WasmSupport" "WasmSupport_betole32" (func $4 (type 4)))
  (import "WasmSupport" "WasmSupport_betole64" (func $5 (type 5)))
  (import "WasmSupport" "WasmSupport_memzero" (func $6 (type 6)))
  (import
    "Hacl_IntTypes_Intrinsics"
    "Hacl_IntTypes_Intrinsics_add_carry_u32"
    (func $7 (type 7))
  )
  (import
    "Hacl_IntTypes_Intrinsics"
    "Hacl_IntTypes_Intrinsics_sub_borrow_u32"
    (func $8 (type 8))
  )
  (import
    "Hacl_IntTypes_Intrinsics"
    "Hacl_IntTypes_Intrinsics_add_carry_u64"
    (func $9 (type 9))
  )
  (import
    "Hacl_IntTypes_Intrinsics"
    "Hacl_IntTypes_Intrinsics_sub_borrow_u64"
    (func $10 (type 10))
  )
  (import "FStar" "FStar_UInt128_u32_64" (global $1 i32))
  (import "FStar" "FStar_UInt128_u32_32" (global $2 i32))
  (import
    "Hacl_Impl_Blake2_Constants"
    "Hacl_Impl_Blake2_Constants___get_sigmaTable"
    (func $11 (type 11))
  )
  (import
    "Hacl_Impl_Blake2_Constants"
    "Hacl_Impl_Blake2_Constants___get_ivTable_S"
    (func $12 (type 12))
  )
  (import
    "Hacl_Impl_Blake2_Constants"
    "Hacl_Impl_Blake2_Constants___get_ivTable_B"
    (func $13 (type 13))
  )
  (import
    "Hacl_Hash_Base"
    "Hacl_Hash_Definitions_word_len"
    (func $14 (type 14))
  )
  (import
    "Hacl_Hash_Base"
    "Hacl_Hash_Definitions_block_len"
    (func $15 (type 15))
  )
  (import
    "Hacl_Hash_Base"
    "Hacl_Hash_Definitions_hash_word_len"
    (func $16 (type 16))
  )
  (import
    "Hacl_Hash_Base"
    "Hacl_Hash_Definitions_hash_len"
    (func $17 (type 17))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_update_multi_blake2s_32"
    (func $18 (type 18))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_update_multi_blake2b_32"
    (func $19 (type 19))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_update_last_blake2s_32"
    (func $20 (type 20))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_update_last_blake2b_32"
    (func $21 (type 21))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_hash_blake2s_32"
    (func $22 (type 22))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Hash_Blake2_hash_blake2b_32"
    (func $23 (type 23))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2b_32_blake2b_init"
    (func $24 (type 24))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2b_32_blake2b_update_key"
    (func $25 (type 25))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2b_32_blake2b_update_multi"
    (func $26 (type 26))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2b_32_blake2b_update_last"
    (func $27 (type 27))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2b_32_blake2b_finish"
    (func $28 (type 28))
  )
  (import "Hacl_Hash_Blake2" "Hacl_Blake2b_32_blake2b" (func $29 (type 29)))
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2s_32_blake2s_init"
    (func $30 (type 30))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2s_32_blake2s_update_key"
    (func $31 (type 31))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2s_32_blake2s_update_multi"
    (func $32 (type 32))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2s_32_blake2s_update_last"
    (func $33 (type 33))
  )
  (import
    "Hacl_Hash_Blake2"
    "Hacl_Blake2s_32_blake2s_finish"
    (func $34 (type 34))
  )
  (import "Hacl_Hash_Blake2" "Hacl_Blake2s_32_blake2s" (func $35 (type 35)))
  (import
    "Hacl_Hash_MD5"
    "Hacl_Hash_MD5_legacy_update_multi"
    (func $36 (type 36))
  )
  (import
    "Hacl_Hash_MD5"
    "Hacl_Hash_MD5_legacy_update_last"
    (func $37 (type 37))
  )
  (import "Hacl_Hash_MD5" "Hacl_Hash_MD5_legacy_hash" (func $38 (type 38)))
  (import "Hacl_Hash_MD5" "Hacl_Hash_Core_MD5___get__h0" (func $39 (type 39)))
  (global $3 (mut i32) (i32.const 0))
  (global $4 i32 (i32.const 1_156))
  (func $40
    (type 40)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (i32.const 0)
    (local.set 7)
    (loop
      (local.get 7)
      (local.get 2)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (i32.const 64)
          (local.set 8)
          (local.get 1)
          (local.get 8)
          (local.get 7)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.set 9)
          (local.get 0)
          (i32.load align=1)
          (local.set 10)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 11)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 12)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 13)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 14)
          (i32.const 80)
          (local.set 15)
          (local.get 15)
          (call 3)
          (drop)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 80)
          (i32.const 1)
          (i32.mul)
          (i32.const 4)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (local.set 16)
          (local.get 16)
          (i32.const 0)
          (i32.store align=1)
          (local.get 15)
          (i32.const 1)
          (i32.sub)
          (local.set 15)
          (loop
            (local.get 15)
            (i32.const 0)
            (i32.gt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 16)
                (local.get 15)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 16)
                (i32.load align=1)
                (i32.store align=1)
                (local.get 15)
                (i32.const 1)
                (i32.sub)
                (local.set 15)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 16)
          (local.set 17)
          (i32.const 0)
          (local.set 18)
          (loop
            (local.get 18)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 18)
                (i32.const 16)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 9)
                    (local.get 18)
                    (i32.const 4)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (local.set 20)
                    (local.get 20)
                    (i32.load align=1)
                    (call 4)
                    (local.set 21)
                    (local.get 21)
                    (local.set 19)
                    (i32.const 0)
                  )
                  (else
                    (local.get 17)
                    (local.get 18)
                    (i32.const 3)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 22)
                    (local.get 17)
                    (local.get 18)
                    (i32.const 8)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 23)
                    (local.get 17)
                    (local.get 18)
                    (i32.const 14)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 24)
                    (local.get 17)
                    (local.get 18)
                    (i32.const 16)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 25)
                    (local.get 22)
                    (local.get 23)
                    (local.get 24)
                    (local.get 25)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 1)
                    (i32.shl)
                    (local.get 22)
                    (local.get 23)
                    (local.get 24)
                    (local.get 25)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 31)
                    (i32.shr_u)
                    (i32.or)
                    (local.set 19)
                    (i32.const 0)
                  )
                )
                (drop)
                (local.get 17)
                (local.get 18)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 19)
                (i32.store align=1)
                (local.get 18)
                (i32.const 1)
                (i32.add)
                (local.set 18)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 26)
          (loop
            (local.get 26)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 0)
                (i32.load align=1)
                (local.set 27)
                (local.get 0)
                (i32.load offset=4 align=1)
                (local.set 28)
                (local.get 0)
                (i32.load offset=8 align=1)
                (local.set 29)
                (local.get 0)
                (i32.load offset=12 align=1)
                (local.set 30)
                (local.get 0)
                (i32.load offset=16 align=1)
                (local.set 31)
                (local.get 17)
                (local.get 26)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 32)
                (local.get 26)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 28)
                    (local.get 29)
                    (i32.and)
                    (i32.const -1)
                    (local.get 28)
                    (i32.xor)
                    (local.get 30)
                    (i32.and)
                    (i32.xor)
                    (local.set 33)
                    (i32.const 0)
                  )
                  (else
                    (i32.const 39)
                    (local.get 26)
                    (i32.lt_u)
                    (local.get 26)
                    (i32.const 60)
                    (i32.lt_u)
                    (i32.and)
                    (if
                      (result i32)
                      (then
                        (local.get 28)
                        (local.get 29)
                        (i32.and)
                        (local.get 28)
                        (local.get 30)
                        (i32.and)
                        (local.get 29)
                        (local.get 30)
                        (i32.and)
                        (i32.xor)
                        (i32.xor)
                        (local.set 33)
                        (i32.const 0)
                      )
                      (else
                        (local.get 28)
                        (local.get 29)
                        (local.get 30)
                        (i32.xor)
                        (i32.xor)
                        (local.set 33)
                        (i32.const 0)
                      )
                    )
                  )
                )
                (drop)
                (local.get 26)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then (i32.const 1_518_500_249) (local.set 34) (i32.const 0))
                  (else
                    (local.get 26)
                    (i32.const 40)
                    (i32.lt_u)
                    (if
                      (result i32)
                      (then
                        (i32.const 1_859_775_393)
                        (local.set 34)
                        (i32.const 0)
                      )
                      (else
                        (local.get 26)
                        (i32.const 60)
                        (i32.lt_u)
                        (if
                          (result i32)
                          (then
                            (i32.const -1_894_007_588)
                            (local.set 34)
                            (i32.const 0)
                          )
                          (else
                            (i32.const -899_497_514)
                            (local.set 34)
                            (i32.const 0)
                          )
                        )
                      )
                    )
                  )
                )
                (drop)
                (local.get 27)
                (i32.const 5)
                (i32.shl)
                (local.get 27)
                (i32.const 27)
                (i32.shr_u)
                (i32.or)
                (local.get 33)
                (i32.add)
                (local.get 31)
                (i32.add)
                (local.get 34)
                (i32.add)
                (local.get 32)
                (i32.add)
                (local.set 35)
                (local.get 0)
                (local.get 35)
                (i32.store align=1)
                (local.get 0)
                (local.get 27)
                (i32.store offset=4 align=1)
                (local.get 0)
                (local.get 28)
                (i32.const 30)
                (i32.shl)
                (local.get 28)
                (i32.const 2)
                (i32.shr_u)
                (i32.or)
                (i32.store offset=8 align=1)
                (local.get 0)
                (local.get 29)
                (i32.store offset=12 align=1)
                (local.get 0)
                (local.get 30)
                (i32.store offset=16 align=1)
                (local.get 26)
                (i32.const 1)
                (i32.add)
                (local.set 26)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 36)
          (loop
            (local.get 36)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 17)
                (local.get 36)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.store align=1)
                (local.get 36)
                (i32.const 1)
                (i32.add)
                (local.set 36)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 0)
          (i32.load align=1)
          (local.set 37)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 38)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 39)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 40)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 41)
          (local.get 0)
          (local.get 37)
          (local.get 10)
          (i32.add)
          (i32.store align=1)
          (local.get 0)
          (local.get 38)
          (local.get 11)
          (i32.add)
          (i32.store offset=4 align=1)
          (local.get 0)
          (local.get 39)
          (local.get 12)
          (i32.add)
          (i32.store offset=8 align=1)
          (local.get 0)
          (local.get 40)
          (local.get 13)
          (i32.add)
          (i32.store offset=12 align=1)
          (local.get 0)
          (local.get 41)
          (local.get 14)
          (i32.add)
          (i32.store offset=16 align=1)
          (local.get 7)
          (i32.const 1)
          (i32.add)
          (local.set 7)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $41
    (type 41)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.get 3)
    (i32.const 64)
    (i32.div_u)
    (local.set 8)
    (local.get 8)
    (i32.const 64)
    (i32.mul)
    (local.set 9)
    (local.get 2)
    (local.set 10)
    (local.get 3)
    (local.get 9)
    (i32.sub)
    (local.set 11)
    (local.get 2)
    (local.get 9)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 12)
    (i32.const 0)
    (local.set 13)
    (loop
      (local.get 13)
      (local.get 8)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (i32.const 64)
          (local.set 14)
          (local.get 10)
          (local.get 14)
          (local.get 13)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.set 15)
          (local.get 0)
          (i32.load align=1)
          (local.set 16)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 17)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 18)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 19)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 20)
          (i32.const 80)
          (local.set 21)
          (local.get 21)
          (call 3)
          (drop)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 80)
          (i32.const 1)
          (i32.mul)
          (i32.const 4)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (local.set 22)
          (local.get 22)
          (i32.const 0)
          (i32.store align=1)
          (local.get 21)
          (i32.const 1)
          (i32.sub)
          (local.set 21)
          (loop
            (local.get 21)
            (i32.const 0)
            (i32.gt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 22)
                (local.get 21)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 22)
                (i32.load align=1)
                (i32.store align=1)
                (local.get 21)
                (i32.const 1)
                (i32.sub)
                (local.set 21)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 22)
          (local.set 23)
          (i32.const 0)
          (local.set 24)
          (loop
            (local.get 24)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 24)
                (i32.const 16)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 15)
                    (local.get 24)
                    (i32.const 4)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (local.set 26)
                    (local.get 26)
                    (i32.load align=1)
                    (call 4)
                    (local.set 27)
                    (local.get 27)
                    (local.set 25)
                    (i32.const 0)
                  )
                  (else
                    (local.get 23)
                    (local.get 24)
                    (i32.const 3)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 28)
                    (local.get 23)
                    (local.get 24)
                    (i32.const 8)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 29)
                    (local.get 23)
                    (local.get 24)
                    (i32.const 14)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 30)
                    (local.get 23)
                    (local.get 24)
                    (i32.const 16)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 31)
                    (local.get 28)
                    (local.get 29)
                    (local.get 30)
                    (local.get 31)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 1)
                    (i32.shl)
                    (local.get 28)
                    (local.get 29)
                    (local.get 30)
                    (local.get 31)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 31)
                    (i32.shr_u)
                    (i32.or)
                    (local.set 25)
                    (i32.const 0)
                  )
                )
                (drop)
                (local.get 23)
                (local.get 24)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 25)
                (i32.store align=1)
                (local.get 24)
                (i32.const 1)
                (i32.add)
                (local.set 24)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 32)
          (loop
            (local.get 32)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 0)
                (i32.load align=1)
                (local.set 33)
                (local.get 0)
                (i32.load offset=4 align=1)
                (local.set 34)
                (local.get 0)
                (i32.load offset=8 align=1)
                (local.set 35)
                (local.get 0)
                (i32.load offset=12 align=1)
                (local.set 36)
                (local.get 0)
                (i32.load offset=16 align=1)
                (local.set 37)
                (local.get 23)
                (local.get 32)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 38)
                (local.get 32)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 34)
                    (local.get 35)
                    (i32.and)
                    (i32.const -1)
                    (local.get 34)
                    (i32.xor)
                    (local.get 36)
                    (i32.and)
                    (i32.xor)
                    (local.set 39)
                    (i32.const 0)
                  )
                  (else
                    (i32.const 39)
                    (local.get 32)
                    (i32.lt_u)
                    (local.get 32)
                    (i32.const 60)
                    (i32.lt_u)
                    (i32.and)
                    (if
                      (result i32)
                      (then
                        (local.get 34)
                        (local.get 35)
                        (i32.and)
                        (local.get 34)
                        (local.get 36)
                        (i32.and)
                        (local.get 35)
                        (local.get 36)
                        (i32.and)
                        (i32.xor)
                        (i32.xor)
                        (local.set 39)
                        (i32.const 0)
                      )
                      (else
                        (local.get 34)
                        (local.get 35)
                        (local.get 36)
                        (i32.xor)
                        (i32.xor)
                        (local.set 39)
                        (i32.const 0)
                      )
                    )
                  )
                )
                (drop)
                (local.get 32)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then (i32.const 1_518_500_249) (local.set 40) (i32.const 0))
                  (else
                    (local.get 32)
                    (i32.const 40)
                    (i32.lt_u)
                    (if
                      (result i32)
                      (then
                        (i32.const 1_859_775_393)
                        (local.set 40)
                        (i32.const 0)
                      )
                      (else
                        (local.get 32)
                        (i32.const 60)
                        (i32.lt_u)
                        (if
                          (result i32)
                          (then
                            (i32.const -1_894_007_588)
                            (local.set 40)
                            (i32.const 0)
                          )
                          (else
                            (i32.const -899_497_514)
                            (local.set 40)
                            (i32.const 0)
                          )
                        )
                      )
                    )
                  )
                )
                (drop)
                (local.get 33)
                (i32.const 5)
                (i32.shl)
                (local.get 33)
                (i32.const 27)
                (i32.shr_u)
                (i32.or)
                (local.get 39)
                (i32.add)
                (local.get 37)
                (i32.add)
                (local.get 40)
                (i32.add)
                (local.get 38)
                (i32.add)
                (local.set 41)
                (local.get 0)
                (local.get 41)
                (i32.store align=1)
                (local.get 0)
                (local.get 33)
                (i32.store offset=4 align=1)
                (local.get 0)
                (local.get 34)
                (i32.const 30)
                (i32.shl)
                (local.get 34)
                (i32.const 2)
                (i32.shr_u)
                (i32.or)
                (i32.store offset=8 align=1)
                (local.get 0)
                (local.get 35)
                (i32.store offset=12 align=1)
                (local.get 0)
                (local.get 36)
                (i32.store offset=16 align=1)
                (local.get 32)
                (i32.const 1)
                (i32.add)
                (local.set 32)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 42)
          (loop
            (local.get 42)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 23)
                (local.get 42)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.store align=1)
                (local.get 42)
                (i32.const 1)
                (i32.add)
                (local.set 42)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 0)
          (i32.load align=1)
          (local.set 43)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 44)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 45)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 46)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 47)
          (local.get 0)
          (local.get 43)
          (local.get 16)
          (i32.add)
          (i32.store align=1)
          (local.get 0)
          (local.get 44)
          (local.get 17)
          (i32.add)
          (i32.store offset=4 align=1)
          (local.get 0)
          (local.get 45)
          (local.get 18)
          (i32.add)
          (i32.store offset=8 align=1)
          (local.get 0)
          (local.get 46)
          (local.get 19)
          (i32.add)
          (i32.store offset=12 align=1)
          (local.get 0)
          (local.get 47)
          (local.get 20)
          (i32.add)
          (i32.store offset=16 align=1)
          (local.get 13)
          (i32.const 1)
          (i32.add)
          (local.set 13)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 1)
    (local.get 3)
    (i64.extend_i32_u)
    (i64.add)
    (local.set 48)
    (i32.const 1)
    (i32.const 128)
    (i32.const 9)
    (local.get 48)
    (i32.const 64)
    (i64.extend_i32_u)
    (i64.rem_u)
    (i32.wrap_i64)
    (i32.add)
    (i32.sub)
    (i32.const 64)
    (i32.rem_u)
    (i32.add)
    (i32.const 8)
    (i32.add)
    (local.set 49)
    (local.get 11)
    (local.get 49)
    (i32.add)
    (local.set 50)
    (i32.const 128)
    (local.set 51)
    (local.get 51)
    (call 3)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 128)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 6)
    (local.set 7)
    (local.get 6)
    (local.get 7)
    (i32.store align=1)
    (local.set 52)
    (local.get 52)
    (i32.const 0)
    (i32.store8)
    (local.get 51)
    (i32.const 1)
    (i32.sub)
    (local.set 51)
    (loop
      (local.get 51)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 52)
          (local.get 51)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 52)
          (i32.load8_u)
          (i32.store8)
          (local.get 51)
          (i32.const 1)
          (i32.sub)
          (local.set 51)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 52)
    (local.set 53)
    (local.get 53)
    (local.set 54)
    (local.get 54)
    (local.set 55)
    (local.get 54)
    (local.get 11)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 56)
    (local.get 12)
    (local.set 57)
    (local.get 55)
    (local.set 58)
    (local.get 11)
    (local.set 59)
    (loop
      (local.get 59)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 58)
          (local.get 59)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 57)
          (local.get 59)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i32.load8_u)
          (i32.store8)
          (local.get 59)
          (i32.const 1)
          (i32.sub)
          (local.set 59)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 56)
    (local.set 60)
    (local.get 60)
    (i32.const 128)
    (i32.store8)
    (local.get 56)
    (i32.const 1)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 61)
    (i32.const 0)
    (local.set 62)
    (loop
      (local.get 62)
      (i32.const 128)
      (i32.const 9)
      (local.get 48)
      (i32.const 64)
      (i64.extend_i32_u)
      (i64.rem_u)
      (i32.wrap_i64)
      (i32.add)
      (i32.sub)
      (i32.const 64)
      (i32.rem_u)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 61)
          (local.get 62)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i32.const 0)
          (i32.store8)
          (local.get 62)
          (i32.const 1)
          (i32.add)
          (local.set 62)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 56)
    (i32.const 1)
    (i32.const 128)
    (i32.const 9)
    (local.get 48)
    (i32.const 64)
    (i64.extend_i32_u)
    (i64.rem_u)
    (i32.wrap_i64)
    (i32.add)
    (i32.sub)
    (i32.const 64)
    (i32.rem_u)
    (i32.add)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 63)
    (local.get 63)
    (local.get 48)
    (i32.const 3)
    (i64.extend_i32_u)
    (i64.shl)
    (call 5)
    (i64.store align=1)
    (local.get 50)
    (i32.const 64)
    (i32.div_u)
    (local.set 64)
    (i32.const 0)
    (local.set 65)
    (loop
      (local.get 65)
      (local.get 64)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (i32.const 64)
          (local.set 66)
          (local.get 54)
          (local.get 66)
          (local.get 65)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.set 67)
          (local.get 0)
          (i32.load align=1)
          (local.set 68)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 69)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 70)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 71)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 72)
          (i32.const 80)
          (local.set 73)
          (local.get 73)
          (call 3)
          (drop)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 80)
          (i32.const 1)
          (i32.mul)
          (i32.const 4)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (local.set 74)
          (local.get 74)
          (i32.const 0)
          (i32.store align=1)
          (local.get 73)
          (i32.const 1)
          (i32.sub)
          (local.set 73)
          (loop
            (local.get 73)
            (i32.const 0)
            (i32.gt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 74)
                (local.get 73)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 74)
                (i32.load align=1)
                (i32.store align=1)
                (local.get 73)
                (i32.const 1)
                (i32.sub)
                (local.set 73)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 74)
          (local.set 75)
          (i32.const 0)
          (local.set 76)
          (loop
            (local.get 76)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 76)
                (i32.const 16)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 67)
                    (local.get 76)
                    (i32.const 4)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (local.set 78)
                    (local.get 78)
                    (i32.load align=1)
                    (call 4)
                    (local.set 79)
                    (local.get 79)
                    (local.set 77)
                    (i32.const 0)
                  )
                  (else
                    (local.get 75)
                    (local.get 76)
                    (i32.const 3)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 80)
                    (local.get 75)
                    (local.get 76)
                    (i32.const 8)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 81)
                    (local.get 75)
                    (local.get 76)
                    (i32.const 14)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 82)
                    (local.get 75)
                    (local.get 76)
                    (i32.const 16)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 83)
                    (local.get 80)
                    (local.get 81)
                    (local.get 82)
                    (local.get 83)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 1)
                    (i32.shl)
                    (local.get 80)
                    (local.get 81)
                    (local.get 82)
                    (local.get 83)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 31)
                    (i32.shr_u)
                    (i32.or)
                    (local.set 77)
                    (i32.const 0)
                  )
                )
                (drop)
                (local.get 75)
                (local.get 76)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 77)
                (i32.store align=1)
                (local.get 76)
                (i32.const 1)
                (i32.add)
                (local.set 76)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 84)
          (loop
            (local.get 84)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 0)
                (i32.load align=1)
                (local.set 85)
                (local.get 0)
                (i32.load offset=4 align=1)
                (local.set 86)
                (local.get 0)
                (i32.load offset=8 align=1)
                (local.set 87)
                (local.get 0)
                (i32.load offset=12 align=1)
                (local.set 88)
                (local.get 0)
                (i32.load offset=16 align=1)
                (local.set 89)
                (local.get 75)
                (local.get 84)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 90)
                (local.get 84)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 86)
                    (local.get 87)
                    (i32.and)
                    (i32.const -1)
                    (local.get 86)
                    (i32.xor)
                    (local.get 88)
                    (i32.and)
                    (i32.xor)
                    (local.set 91)
                    (i32.const 0)
                  )
                  (else
                    (i32.const 39)
                    (local.get 84)
                    (i32.lt_u)
                    (local.get 84)
                    (i32.const 60)
                    (i32.lt_u)
                    (i32.and)
                    (if
                      (result i32)
                      (then
                        (local.get 86)
                        (local.get 87)
                        (i32.and)
                        (local.get 86)
                        (local.get 88)
                        (i32.and)
                        (local.get 87)
                        (local.get 88)
                        (i32.and)
                        (i32.xor)
                        (i32.xor)
                        (local.set 91)
                        (i32.const 0)
                      )
                      (else
                        (local.get 86)
                        (local.get 87)
                        (local.get 88)
                        (i32.xor)
                        (i32.xor)
                        (local.set 91)
                        (i32.const 0)
                      )
                    )
                  )
                )
                (drop)
                (local.get 84)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then (i32.const 1_518_500_249) (local.set 92) (i32.const 0))
                  (else
                    (local.get 84)
                    (i32.const 40)
                    (i32.lt_u)
                    (if
                      (result i32)
                      (then
                        (i32.const 1_859_775_393)
                        (local.set 92)
                        (i32.const 0)
                      )
                      (else
                        (local.get 84)
                        (i32.const 60)
                        (i32.lt_u)
                        (if
                          (result i32)
                          (then
                            (i32.const -1_894_007_588)
                            (local.set 92)
                            (i32.const 0)
                          )
                          (else
                            (i32.const -899_497_514)
                            (local.set 92)
                            (i32.const 0)
                          )
                        )
                      )
                    )
                  )
                )
                (drop)
                (local.get 85)
                (i32.const 5)
                (i32.shl)
                (local.get 85)
                (i32.const 27)
                (i32.shr_u)
                (i32.or)
                (local.get 91)
                (i32.add)
                (local.get 89)
                (i32.add)
                (local.get 92)
                (i32.add)
                (local.get 90)
                (i32.add)
                (local.set 93)
                (local.get 0)
                (local.get 93)
                (i32.store align=1)
                (local.get 0)
                (local.get 85)
                (i32.store offset=4 align=1)
                (local.get 0)
                (local.get 86)
                (i32.const 30)
                (i32.shl)
                (local.get 86)
                (i32.const 2)
                (i32.shr_u)
                (i32.or)
                (i32.store offset=8 align=1)
                (local.get 0)
                (local.get 87)
                (i32.store offset=12 align=1)
                (local.get 0)
                (local.get 88)
                (i32.store offset=16 align=1)
                (local.get 84)
                (i32.const 1)
                (i32.add)
                (local.set 84)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 94)
          (loop
            (local.get 94)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 75)
                (local.get 94)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.store align=1)
                (local.get 94)
                (i32.const 1)
                (i32.add)
                (local.set 94)
                (i32.const 0)
                (local.set 6)
                (local.set 7)
                (local.get 6)
                (local.get 7)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 0)
          (i32.load align=1)
          (local.set 95)
          (local.get 0)
          (i32.load offset=4 align=1)
          (local.set 96)
          (local.get 0)
          (i32.load offset=8 align=1)
          (local.set 97)
          (local.get 0)
          (i32.load offset=12 align=1)
          (local.set 98)
          (local.get 0)
          (i32.load offset=16 align=1)
          (local.set 99)
          (local.get 0)
          (local.get 95)
          (local.get 68)
          (i32.add)
          (i32.store align=1)
          (local.get 0)
          (local.get 96)
          (local.get 69)
          (i32.add)
          (i32.store offset=4 align=1)
          (local.get 0)
          (local.get 97)
          (local.get 70)
          (i32.add)
          (i32.store offset=8 align=1)
          (local.get 0)
          (local.get 98)
          (local.get 71)
          (i32.add)
          (i32.store offset=12 align=1)
          (local.get 0)
          (local.get 99)
          (local.get 72)
          (i32.add)
          (i32.store offset=16 align=1)
          (local.get 65)
          (i32.const 1)
          (i32.add)
          (local.set 65)
          (i32.const 0)
          (local.set 6)
          (local.set 7)
          (local.get 6)
          (local.get 7)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.set 6)
    (local.set 7)
    (local.get 6)
    (local.get 7)
    (i32.const 0)
    (local.set 6)
    (local.set 7)
    (local.get 6)
    (local.get 7)
    (i32.store align=1)
  )
  (func $42
    (type 42)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 5)
    (i32.const 1)
    (i32.mul)
    (i32.const 4)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
    (local.set 7)
    (local.get 7)
    (i32.const 1_732_584_193)
    (i32.store align=1)
    (local.get 7)
    (i32.const -271_733_879)
    (i32.store offset=4 align=1)
    (local.get 7)
    (i32.const -1_732_584_194)
    (i32.store offset=8 align=1)
    (local.get 7)
    (i32.const 271_733_878)
    (i32.store offset=12 align=1)
    (local.get 7)
    (i32.const -1_009_589_776)
    (i32.store offset=16 align=1)
    (local.get 7)
    (local.set 8)
    (local.get 8)
    (local.set 9)
    (local.get 1)
    (i32.const 64)
    (i32.div_u)
    (local.set 10)
    (local.get 1)
    (i32.const 64)
    (i32.rem_u)
    (i32.const 0)
    (i32.eq)
    (local.get 10)
    (i32.const 0)
    (i32.gt_u)
    (i32.and)
    (if
      (result i32)
      (then (local.get 10) (i32.const 1) (i32.sub) (local.set 11) (i32.const 0))
      (else (local.get 10) (local.set 11) (i32.const 0))
    )
    (drop)
    (local.get 11)
    (i32.const 64)
    (i32.mul)
    (local.set 12)
    (local.get 0)
    (local.set 13)
    (local.get 1)
    (local.get 12)
    (i32.sub)
    (local.set 14)
    (local.get 0)
    (local.get 12)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 15)
    (local.get 11)
    (local.set 16)
    (local.get 12)
    (local.set 17)
    (local.get 13)
    (local.set 18)
    (local.get 14)
    (local.set 19)
    (local.get 15)
    (local.set 20)
    (i32.const 0)
    (local.set 21)
    (loop
      (local.get 21)
      (local.get 16)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (i32.const 64)
          (local.set 22)
          (local.get 18)
          (local.get 22)
          (local.get 21)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.set 23)
          (local.get 9)
          (i32.load align=1)
          (local.set 24)
          (local.get 9)
          (i32.load offset=4 align=1)
          (local.set 25)
          (local.get 9)
          (i32.load offset=8 align=1)
          (local.set 26)
          (local.get 9)
          (i32.load offset=12 align=1)
          (local.set 27)
          (local.get 9)
          (i32.load offset=16 align=1)
          (local.set 28)
          (i32.const 80)
          (local.set 29)
          (local.get 29)
          (call 3)
          (drop)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 80)
          (i32.const 1)
          (i32.mul)
          (i32.const 4)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (local.set 30)
          (local.get 30)
          (i32.const 0)
          (i32.store align=1)
          (local.get 29)
          (i32.const 1)
          (i32.sub)
          (local.set 29)
          (loop
            (local.get 29)
            (i32.const 0)
            (i32.gt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 30)
                (local.get 29)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 30)
                (i32.load align=1)
                (i32.store align=1)
                (local.get 29)
                (i32.const 1)
                (i32.sub)
                (local.set 29)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 30)
          (local.set 31)
          (i32.const 0)
          (local.set 32)
          (loop
            (local.get 32)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 32)
                (i32.const 16)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 23)
                    (local.get 32)
                    (i32.const 4)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (local.set 34)
                    (local.get 34)
                    (i32.load align=1)
                    (call 4)
                    (local.set 35)
                    (local.get 35)
                    (local.set 33)
                    (i32.const 0)
                  )
                  (else
                    (local.get 31)
                    (local.get 32)
                    (i32.const 3)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 36)
                    (local.get 31)
                    (local.get 32)
                    (i32.const 8)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 37)
                    (local.get 31)
                    (local.get 32)
                    (i32.const 14)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 38)
                    (local.get 31)
                    (local.get 32)
                    (i32.const 16)
                    (i32.sub)
                    (i32.const 4)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 39)
                    (local.get 36)
                    (local.get 37)
                    (local.get 38)
                    (local.get 39)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 1)
                    (i32.shl)
                    (local.get 36)
                    (local.get 37)
                    (local.get 38)
                    (local.get 39)
                    (i32.xor)
                    (i32.xor)
                    (i32.xor)
                    (i32.const 31)
                    (i32.shr_u)
                    (i32.or)
                    (local.set 33)
                    (i32.const 0)
                  )
                )
                (drop)
                (local.get 31)
                (local.get 32)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (local.get 33)
                (i32.store align=1)
                (local.get 32)
                (i32.const 1)
                (i32.add)
                (local.set 32)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 40)
          (loop
            (local.get 40)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 9)
                (i32.load align=1)
                (local.set 41)
                (local.get 9)
                (i32.load offset=4 align=1)
                (local.set 42)
                (local.get 9)
                (i32.load offset=8 align=1)
                (local.set 43)
                (local.get 9)
                (i32.load offset=12 align=1)
                (local.set 44)
                (local.get 9)
                (i32.load offset=16 align=1)
                (local.set 45)
                (local.get 31)
                (local.get 40)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 46)
                (local.get 40)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then
                    (local.get 42)
                    (local.get 43)
                    (i32.and)
                    (i32.const -1)
                    (local.get 42)
                    (i32.xor)
                    (local.get 44)
                    (i32.and)
                    (i32.xor)
                    (local.set 47)
                    (i32.const 0)
                  )
                  (else
                    (i32.const 39)
                    (local.get 40)
                    (i32.lt_u)
                    (local.get 40)
                    (i32.const 60)
                    (i32.lt_u)
                    (i32.and)
                    (if
                      (result i32)
                      (then
                        (local.get 42)
                        (local.get 43)
                        (i32.and)
                        (local.get 42)
                        (local.get 44)
                        (i32.and)
                        (local.get 43)
                        (local.get 44)
                        (i32.and)
                        (i32.xor)
                        (i32.xor)
                        (local.set 47)
                        (i32.const 0)
                      )
                      (else
                        (local.get 42)
                        (local.get 43)
                        (local.get 44)
                        (i32.xor)
                        (i32.xor)
                        (local.set 47)
                        (i32.const 0)
                      )
                    )
                  )
                )
                (drop)
                (local.get 40)
                (i32.const 20)
                (i32.lt_u)
                (if
                  (result i32)
                  (then (i32.const 1_518_500_249) (local.set 48) (i32.const 0))
                  (else
                    (local.get 40)
                    (i32.const 40)
                    (i32.lt_u)
                    (if
                      (result i32)
                      (then
                        (i32.const 1_859_775_393)
                        (local.set 48)
                        (i32.const 0)
                      )
                      (else
                        (local.get 40)
                        (i32.const 60)
                        (i32.lt_u)
                        (if
                          (result i32)
                          (then
                            (i32.const -1_894_007_588)
                            (local.set 48)
                            (i32.const 0)
                          )
                          (else
                            (i32.const -899_497_514)
                            (local.set 48)
                            (i32.const 0)
                          )
                        )
                      )
                    )
                  )
                )
                (drop)
                (local.get 41)
                (i32.const 5)
                (i32.shl)
                (local.get 41)
                (i32.const 27)
                (i32.shr_u)
                (i32.or)
                (local.get 47)
                (i32.add)
                (local.get 45)
                (i32.add)
                (local.get 48)
                (i32.add)
                (local.get 46)
                (i32.add)
                (local.set 49)
                (local.get 9)
                (local.get 49)
                (i32.store align=1)
                (local.get 9)
                (local.get 41)
                (i32.store offset=4 align=1)
                (local.get 9)
                (local.get 42)
                (i32.const 30)
                (i32.shl)
                (local.get 42)
                (i32.const 2)
                (i32.shr_u)
                (i32.or)
                (i32.store offset=8 align=1)
                (local.get 9)
                (local.get 43)
                (i32.store offset=12 align=1)
                (local.get 9)
                (local.get 44)
                (i32.store offset=16 align=1)
                (local.get 40)
                (i32.const 1)
                (i32.add)
                (local.set 40)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (i32.const 0)
          (local.set 50)
          (loop
            (local.get 50)
            (i32.const 80)
            (i32.lt_u)
            (if
              (then
                (i32.const 0)
                (i32.load align=1)
                (local.get 31)
                (local.get 50)
                (i32.const 4)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.store align=1)
                (local.get 50)
                (i32.const 1)
                (i32.add)
                (local.set 50)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (br 1)
              )
              (else (nop))
            )
          )
          (local.get 9)
          (i32.load align=1)
          (local.set 51)
          (local.get 9)
          (i32.load offset=4 align=1)
          (local.set 52)
          (local.get 9)
          (i32.load offset=8 align=1)
          (local.set 53)
          (local.get 9)
          (i32.load offset=12 align=1)
          (local.set 54)
          (local.get 9)
          (i32.load offset=16 align=1)
          (local.set 55)
          (local.get 9)
          (local.get 51)
          (local.get 24)
          (i32.add)
          (i32.store align=1)
          (local.get 9)
          (local.get 52)
          (local.get 25)
          (i32.add)
          (i32.store offset=4 align=1)
          (local.get 9)
          (local.get 53)
          (local.get 26)
          (i32.add)
          (i32.store offset=8 align=1)
          (local.get 9)
          (local.get 54)
          (local.get 27)
          (i32.add)
          (i32.store offset=12 align=1)
          (local.get 9)
          (local.get 55)
          (local.get 28)
          (i32.add)
          (i32.store offset=16 align=1)
          (local.get 21)
          (i32.const 1)
          (i32.add)
          (local.set 21)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 9)
    (local.get 17)
    (i64.extend_i32_u)
    (local.get 20)
    (local.get 19)
    (call 41)
    (drop)
    (local.get 9)
    (local.set 56)
    (i32.const 0)
    (local.set 57)
    (loop
      (local.get 57)
      (i32.const 5)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 2)
          (local.get 57)
          (i32.const 4)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 56)
          (local.get 57)
          (i32.const 4)
          (i32.mul)
          (i32.add)
          (i32.load align=1)
          (call 4)
          (i32.store align=1)
          (local.get 57)
          (i32.const 1)
          (i32.add)
          (local.set 57)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $43
    (type 43)
    (local i64 i64 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (global.get 3)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $44 (type 44) (global.get 0) (i32.const 1_135) (i32.add) (global.set 3))
  (export "Hacl_Hash_SHA1_legacy_update_multi" (func 40))
  (export "Hacl_Hash_SHA1_legacy_update_last" (func 41))
  (export "Hacl_Hash_SHA1_legacy_hash" (func 42))
  (export "Hacl_Hash_Core_SHA1___get__h0" (func 43))
  (export "data_size" (global 4))
  (start 44)
  (data
    0
    (offset (global.get 0))
    "\5a\65\72\6f\2d\73\69\7a\65\64\20\61\72\72\61\79"
    "\73\20\61\72\65\20\6e\6f\74\20\73\75\70\70\6f\72"
    "\74\65\64\20\69\6e\20\43\20\61\6e\64\20\69\6e\20"
    "\57\41\53\4d\20\65\69\74\68\65\72\2e\20\53\65\65"
    "\20\57\61\73\6d\53\75\70\70\6f\72\74\2e\66\73\74"
    "\00\4f\76\65\72\66\6c\6f\77\20\69\6e\20\6d\65\6d"
    "\7a\65\72\6f\3b\20\73\65\65\20\57\61\73\6d\53\75"
    "\70\70\6f\72\74\2e\66\73\74\00\00\00\00\00\01\00"
    "\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00"
    "\00\00\06\00\00\00\07\00\00\00\08\00\00\00\09\00"
    "\00\00\0a\00\00\00\0b\00\00\00\0c\00\00\00\0d\00"
    "\00\00\0e\00\00\00\0f\00\00\00\0e\00\00\00\0a\00"
    "\00\00\04\00\00\00\08\00\00\00\09\00\00\00\0f\00"
    "\00\00\0d\00\00\00\06\00\00\00\01\00\00\00\0c\00"
    "\00\00\00\00\00\00\02\00\00\00\0b\00\00\00\07\00"
    "\00\00\05\00\00\00\03\00\00\00\0b\00\00\00\08\00"
    "\00\00\0c\00\00\00\00\00\00\00\05\00\00\00\02\00"
    "\00\00\0f\00\00\00\0d\00\00\00\0a\00\00\00\0e\00"
    "\00\00\03\00\00\00\06\00\00\00\07\00\00\00\01\00"
    "\00\00\09\00\00\00\04\00\00\00\07\00\00\00\09\00"
    "\00\00\03\00\00\00\01\00\00\00\0d\00\00\00\0c\00"
    "\00\00\0b\00\00\00\0e\00\00\00\02\00\00\00\06\00"
    "\00\00\05\00\00\00\0a\00\00\00\04\00\00\00\00\00"
    "\00\00\0f\00\00\00\08\00\00\00\09\00\00\00\00\00"
    "\00\00\05\00\00\00\07\00\00\00\02\00\00\00\04\00"
    "\00\00\0a\00\00\00\0f\00\00\00\0e\00\00\00\01\00"
    "\00\00\0b\00\00\00\0c\00\00\00\06\00\00\00\08\00"
    "\00\00\03\00\00\00\0d\00\00\00\02\00\00\00\0c\00"
    "\00\00\06\00\00\00\0a\00\00\00\00\00\00\00\0b\00"
    "\00\00\08\00\00\00\03\00\00\00\04\00\00\00\0d\00"
    "\00\00\07\00\00\00\05\00\00\00\0f\00\00\00\0e\00"
    "\00\00\01\00\00\00\09\00\00\00\0c\00\00\00\05\00"
    "\00\00\01\00\00\00\0f\00\00\00\0e\00\00\00\0d\00"
    "\00\00\04\00\00\00\0a\00\00\00\00\00\00\00\07\00"
    "\00\00\06\00\00\00\03\00\00\00\09\00\00\00\02\00"
    "\00\00\08\00\00\00\0b\00\00\00\0d\00\00\00\0b\00"
    "\00\00\07\00\00\00\0e\00\00\00\0c\00\00\00\01\00"
    "\00\00\03\00\00\00\09\00\00\00\05\00\00\00\00\00"
    "\00\00\0f\00\00\00\04\00\00\00\08\00\00\00\06\00"
    "\00\00\02\00\00\00\0a\00\00\00\06\00\00\00\0f\00"
    "\00\00\0e\00\00\00\09\00\00\00\0b\00\00\00\03\00"
    "\00\00\00\00\00\00\08\00\00\00\0c\00\00\00\02\00"
    "\00\00\0d\00\00\00\07\00\00\00\01\00\00\00\04\00"
    "\00\00\0a\00\00\00\05\00\00\00\0a\00\00\00\02\00"
    "\00\00\08\00\00\00\04\00\00\00\07\00\00\00\06\00"
    "\00\00\01\00\00\00\05\00\00\00\0f\00\00\00\0b\00"
    "\00\00\09\00\00\00\0e\00\00\00\03\00\00\00\0c\00"
    "\00\00\0d\00\00\00\00\00\00\00\00\67\e6\09\6a\85"
    "\ae\67\bb\72\f3\6e\3c\3a\f5\4f\a5\7f\52\0e\51\8c"
    "\68\05\9b\ab\d9\83\1f\19\cd\e0\5b\00\08\c9\bc\f3"
    "\67\e6\09\6a\3b\a7\ca\84\85\ae\67\bb\2b\f8\94\fe"
    "\72\f3\6e\3c\f1\36\1d\5f\3a\f5\4f\a5\d1\82\e6\ad"
    "\7f\52\0e\51\1f\6c\3e\2b\8c\68\05\9b\6b\bd\41\fb"
    "\ab\d9\83\1f\79\21\7e\13\19\cd\e0\5b\00\01\23\45"
    "\67\89\ab\cd\ef\fe\dc\ba\98\76\54\32\10\00\78\a4"
    "\6a\d7\56\b7\c7\e8\db\70\20\24\ee\ce\bd\c1\af\0f"
    "\7c\f5\2a\c6\87\47\13\46\30\a8\01\95\46\fd\d8\98"
    "\80\69\af\f7\44\8b\b1\5b\ff\ff\be\d7\5c\89\22\11"
    "\90\6b\93\71\98\fd\8e\43\79\a6\21\08\b4\49\62\25"
    "\1e\f6\40\b3\40\c0\51\5a\5e\26\aa\c7\b6\e9\5d\10"
    "\2f\d6\53\14\44\02\81\e6\a1\d8\c8\fb\d3\e7\e6\cd"
    "\e1\21\d6\07\37\c3\87\0d\d5\f4\ed\14\5a\45\05\e9"
    "\e3\a9\f8\a3\ef\fc\d9\02\6f\67\8a\4c\2a\8d\42\39"
    "\fa\ff\81\f6\71\87\22\61\9d\6d\0c\38\e5\fd\44\ea"
    "\be\a4\a9\cf\de\4b\60\4b\bb\f6\70\bc\bf\be\c6\7e"
    "\9b\28\fa\27\a1\ea\85\30\ef\d4\05\1d\88\04\39\d0"
    "\d4\d9\e5\99\db\e6\f8\7c\a2\1f\65\56\ac\c4\44\22"
    "\29\f4\97\ff\2a\43\a7\23\94\ab\39\a0\93\fc\c3\59"
    "\5b\65\92\cc\0c\8f\7d\f4\ef\ff\d1\5d\84\85\4f\7e"
    "\a8\6f\e0\e6\2c\fe\14\43\01\a3\a1\11\08\4e\82\7e"
    "\53\f7\35\f2\3a\bd\bb\d2\d7\2a\91\d3\86\eb\00\01"
    "\23\45\67\89\ab\cd\ef\fe\dc\ba\98\76\54\32\10\f0"
    "\e1\d2\c3\00"
  )
)
